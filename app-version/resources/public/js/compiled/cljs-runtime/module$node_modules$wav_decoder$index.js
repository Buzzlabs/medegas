shadow$provide.module$node_modules$wav_decoder$index=function(global,require,module,exports){function decodeSync(buffer,opts){opts=opts||{};global.Buffer&&buffer instanceof global.Buffer&&(buffer=Uint8Array.from(buffer).buffer);buffer=new DataView(buffer);buffer=createReader(buffer);if("RIFF"!==buffer.string(4))throw new TypeError("Invalid WAV file");buffer.uint32();if("WAVE"!==buffer.string(4))throw new TypeError("Invalid WAV file");var format=null,audioData=null;do{var chunkType=buffer.string(4),
chunkSize=buffer.uint32();switch(chunkType){case "fmt ":format=buffer;chunkType=format.uint16();formats.hasOwnProperty(chunkType)?(chunkType={formatId:chunkType,floatingPoint:3===chunkType,numberOfChannels:format.uint16(),sampleRate:format.uint32(),byteRate:format.uint32(),blockSize:format.uint16(),bitDepth:format.uint16()},format.skip(chunkSize-16),format=chunkType):format=new TypeError("Unsupported format in WAV file: 0x"+chunkType.toString(16));if(format instanceof Error)throw format;break;case "data":var reader=
buffer;audioData=chunkSize;var format$jscomp$0=format,opts$jscomp$0=opts;audioData=Math.min(audioData,reader.remain());audioData=Math.floor(audioData/format$jscomp$0.blockSize);chunkSize=format$jscomp$0.numberOfChannels;chunkType=format$jscomp$0.sampleRate;for(var channelData=Array(chunkSize),ch=0;ch<chunkSize;ch++)channelData[ch]=new Float32Array(audioData);var reader$jscomp$0=reader;reader=channelData;ch=audioData;opts$jscomp$0="pcm"+format$jscomp$0.bitDepth+(format$jscomp$0.floatingPoint?"f":opts$jscomp$0.symmetric?
"s":"");if(reader$jscomp$0[opts$jscomp$0]){opts$jscomp$0=reader$jscomp$0[opts$jscomp$0].bind(reader$jscomp$0);format$jscomp$0=format$jscomp$0.numberOfChannels;for(reader$jscomp$0=0;reader$jscomp$0<ch;reader$jscomp$0++)for(var ch$jscomp$0=0;ch$jscomp$0<format$jscomp$0;ch$jscomp$0++)reader[ch$jscomp$0][reader$jscomp$0]=opts$jscomp$0();reader=null}else reader=new TypeError("Not supported bit depth: "+format$jscomp$0.bitDepth);audioData=reader instanceof Error?reader:{numberOfChannels:chunkSize,length:audioData,
sampleRate:chunkType,channelData};if(audioData instanceof Error)throw audioData;break;default:buffer.skip(chunkSize)}}while(null===audioData);return audioData}function createReader(dataView){var pos=0;return{remain:function(){return dataView.byteLength-pos},skip:function(n){pos+=n},uint8:function(){var data=dataView.getUint8(pos,!0);pos+=1;return data},int16:function(){var data=dataView.getInt16(pos,!0);pos+=2;return data},uint16:function(){var data=dataView.getUint16(pos,!0);pos+=2;return data},
uint32:function(){var data=dataView.getUint32(pos,!0);pos+=4;return data},string:function(n){for(var data="",i=0;i<n;i++)data+=String.fromCharCode(this.uint8());return data},pcm8:function(){var data=dataView.getUint8(pos)-128;pos+=1;return 0>data?data/128:data/127},pcm8s:function(){var data=dataView.getUint8(pos)-127.5;pos+=1;return data/127.5},pcm16:function(){var data=dataView.getInt16(pos,!0);pos+=2;return 0>data?data/32768:data/32767},pcm16s:function(){var data=dataView.getInt16(pos,!0);pos+=
2;return data/32768},pcm24:function(){var x0=dataView.getUint8(pos+0),x1=dataView.getUint8(pos+1),x2=dataView.getUint8(pos+2);x0=x0+(x1<<8)+(x2<<16);x0=8388608<x0?x0-16777216:x0;pos+=3;return 0>x0?x0/8388608:x0/8388607},pcm24s:function(){var x0=dataView.getUint8(pos+0),x1=dataView.getUint8(pos+1),x2=dataView.getUint8(pos+2);x0=x0+(x1<<8)+(x2<<16);pos+=3;return(8388608<x0?x0-16777216:x0)/8388608},pcm32:function(){var data=dataView.getInt32(pos,!0);pos+=4;return 0>data?data/2147483648:data/2147483647},
pcm32s:function(){var data=dataView.getInt32(pos,!0);pos+=4;return data/2147483648},pcm32f:function(){var data=dataView.getFloat32(pos,!0);pos+=4;return data},pcm64f:function(){var data=dataView.getFloat64(pos,!0);pos+=8;return data}}}var formats={1:"lpcm",3:"lpcm"};module.exports.decode=function(buffer,opts){return new Promise(function(resolve){resolve(decodeSync(buffer,opts))})};module.exports.decode.sync=decodeSync}
//# sourceMappingURL=module$node_modules$wav_decoder$index.js.map
