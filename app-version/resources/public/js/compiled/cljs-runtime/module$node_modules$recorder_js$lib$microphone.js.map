{
"version":3,
"file":"module$node_modules$recorder_js$lib$microphone.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/recorder-js/lib/microphone.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$recorder_js$lib$microphone\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */\n/**\n * License (MIT)\n *\n * Copyright \u00a9 2013 Matt Diamond\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar _inlineWorker = require('inline-worker');\n\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  bufferLen: 4096,\n  numChannels: 2,\n  mimeType: 'audio/wav'\n};\n\nvar Microphone = function () {\n  function Microphone(source, config) {\n    var _this = this;\n\n    _classCallCheck(this, Microphone);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.recording = false;\n\n    this.callbacks = {\n      getBuffer: [],\n      exportWAV: []\n    };\n\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n    this.node.onaudioprocess = function (e) {\n      if (!_this.recording) return;\n\n      var buffer = [];\n      for (var channel = 0; channel < _this.config.numChannels; channel++) {\n        buffer.push(e.inputBuffer.getChannelData(channel));\n      }\n      _this.worker.postMessage({\n        command: 'record',\n        buffer: buffer\n      });\n    };\n\n    source.connect(this.node);\n    this.node.connect(this.context.destination); //this should not be necessary\n\n    var self = {};\n    this.worker = new _inlineWorker2.default(function () {\n      var recLength = 0,\n          recBuffers = [],\n          sampleRate = void 0,\n          numChannels = void 0;\n\n      this.onmessage = function (e) {\n        switch (e.data.command) {\n          case 'init':\n            init(e.data.config);\n            break;\n          case 'record':\n            record(e.data.buffer);\n            break;\n          case 'exportWAV':\n            exportWAV(e.data.type);\n            break;\n          case 'getBuffer':\n            getBuffer();\n            break;\n          case 'clear':\n            clear();\n            break;\n        }\n      };\n\n      function init(config) {\n        sampleRate = config.sampleRate;\n        numChannels = config.numChannels;\n        initBuffers();\n      }\n\n      function record(inputBuffer) {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel].push(inputBuffer[channel]);\n        }\n        recLength += inputBuffer[0].length;\n      }\n\n      function exportWAV(type) {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        var interleaved = void 0;\n        if (numChannels === 2) {\n          interleaved = interleave(buffers[0], buffers[1]);\n        } else {\n          interleaved = buffers[0];\n        }\n        var dataview = encodeWAV(interleaved);\n        var audioBlob = new Blob([dataview], { type: type });\n\n        this.postMessage({ command: 'exportWAV', data: audioBlob });\n      }\n\n      function getBuffer() {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        this.postMessage({ command: 'getBuffer', data: buffers });\n      }\n\n      function clear() {\n        recLength = 0;\n        recBuffers = [];\n        initBuffers();\n      }\n\n      function initBuffers() {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel] = [];\n        }\n      }\n\n      function mergeBuffers(recBuffers, recLength) {\n        var result = new Float32Array(recLength);\n        var offset = 0;\n        for (var i = 0; i < recBuffers.length; i++) {\n          result.set(recBuffers[i], offset);\n          offset += recBuffers[i].length;\n        }\n        return result;\n      }\n\n      function interleave(inputL, inputR) {\n        var length = inputL.length + inputR.length;\n        var result = new Float32Array(length);\n\n        var index = 0,\n            inputIndex = 0;\n\n        while (index < length) {\n          result[index++] = inputL[inputIndex];\n          result[index++] = inputR[inputIndex];\n          inputIndex++;\n        }\n        return result;\n      }\n\n      function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      }\n\n      function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i += 1) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n\n      function encodeWAV(samples) {\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n\n        /* RIFF identifier */\n        writeString(view, 0, 'RIFF');\n        /* RIFF chunk length */\n        view.setUint32(4, 36 + samples.length * 2, true);\n        /* RIFF type */\n        writeString(view, 8, 'WAVE');\n        /* format chunk identifier */\n        writeString(view, 12, 'fmt ');\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        view.setUint16(22, numChannels, true);\n        /* sample rate */\n        view.setUint32(24, sampleRate, true);\n        /* byte rate (sample rate * block align) */\n        view.setUint32(28, sampleRate * 4, true);\n        /* block align (channel count * bytes per sample) */\n        view.setUint16(32, numChannels * 2, true);\n        /* bits per sample */\n        view.setUint16(34, 16, true);\n        /* data chunk identifier */\n        writeString(view, 36, 'data');\n        /* data chunk length */\n        view.setUint32(40, samples.length * 2, true);\n\n        floatTo16BitPCM(view, 44, samples);\n\n        return view;\n      }\n    }, self);\n\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: this.context.sampleRate,\n        numChannels: this.config.numChannels\n      }\n    });\n\n    this.worker.onmessage = function (e) {\n      var cb = _this.callbacks[e.data.command].pop();\n      if (typeof cb === 'function') {\n        cb(e.data.data);\n      }\n    };\n  }\n\n  _createClass(Microphone, [{\n    key: 'record',\n    value: function record() {\n      this.recording = true;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.recording = false;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.worker.postMessage({ command: 'clear' });\n    }\n  }, {\n    key: 'getBuffer',\n    value: function getBuffer(cb) {\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.getBuffer.push(cb);\n\n      this.worker.postMessage({ command: 'getBuffer' });\n    }\n  }, {\n    key: 'exportWAV',\n    value: function exportWAV(cb, mimeType) {\n      mimeType = mimeType || this.config.mimeType;\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.exportWAV.push(cb);\n\n      this.worker.postMessage({\n        command: 'exportWAV',\n        type: mimeType\n      });\n    }\n  }]);\n\n  return Microphone;\n}();\n\nMicrophone.forceDownload = function forceDownload(blob, filename) {\n  var a = document.createElement('a');\n\n  a.style = 'display: none';\n  document.body.appendChild(a);\n\n  var url = window.URL.createObjectURL(blob);\n\n  a.href = url;\n  a.download = filename;\n  a.click();\n\n  window.URL.revokeObjectURL(url);\n\n  document.body.removeChild(a);\n};\n\nexports.default = Microphone;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_inlineWorker2","_inlineWorker","__esModule","default","defaultConfig","bufferLen","numChannels","mimeType","Microphone","source","config","_this","instance","TypeError","assign","recording","callbacks","getBuffer","exportWAV","context","node","call","createScriptProcessor","createJavaScriptNode","onaudioprocess","this.node.onaudioprocess","e","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","type","buffers","mergeBuffers","recBuffers","recLength","inputL","inputR","result","Float32Array","index","inputIndex","interleaved","ArrayBuffer","samples","view","DataView","writeString","setUint32","setUint16","sampleRate","offset","s","Math","max","min","setInt16","audioBlob","Blob","data","initBuffers","set","string","setUint8","charCodeAt","onmessage","this.onmessage","self","this.worker.onmessage","cb","pop","record","stop","clear","callback","Error","forceDownload","Microphone.forceDownload","blob","filename","a","document","createElement","style","body","appendChild","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","removeChild"]
}
