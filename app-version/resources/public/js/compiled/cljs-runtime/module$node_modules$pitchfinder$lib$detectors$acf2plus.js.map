{
"version":3,
"file":"module$node_modules$pitchfinder$lib$detectors$acf2plus.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/pitchfinder/lib/detectors/acf2plus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pitchfinder$lib$detectors$acf2plus\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DEFAULT_PARAMS = {\n    sampleRate: 44100,\n};\nfunction ACF2PLUS(params) {\n    if (params === void 0) { params = DEFAULT_PARAMS; }\n    var config = __assign(__assign({}, DEFAULT_PARAMS), params);\n    var sampleRate = config.sampleRate;\n    // Implements the ACF2+ algorithm\n    return function ACF2PLUSDetector(float32AudioBuffer) {\n        var maxShift = float32AudioBuffer.length;\n        var rms = 0;\n        var i, j, u, tmp;\n        for (i = 0; i < maxShift; i++) {\n            tmp = float32AudioBuffer[i];\n            rms += tmp * tmp;\n        }\n        rms = Math.sqrt(rms / maxShift);\n        if (rms < 0.01)\n            // not enough signal\n            return -1;\n        /* Trimming cuts the edges of the signal so that it starts and ends near zero.\n         This is used to neutralize an inherent instability of the ACF version I use.*/\n        var aux1 = 0;\n        var aux2 = maxShift - 1;\n        var thres = 0.2;\n        for (i = 0; i < maxShift / 2; i++)\n            if (Math.abs(float32AudioBuffer[i]) < thres) {\n                aux1 = i;\n                break;\n            }\n        for (i = 1; i < maxShift / 2; i++)\n            if (Math.abs(float32AudioBuffer[maxShift - i]) < thres) {\n                aux2 = maxShift - i;\n                break;\n            }\n        var frames = float32AudioBuffer.slice(aux1, aux2);\n        var framesLength = frames.length;\n        var calcSub = new Array(framesLength).fill(0);\n        for (i = 0; i < framesLength; i++)\n            for (j = 0; j < framesLength - i; j++)\n                calcSub[i] = calcSub[i] + frames[j] * frames[j + i];\n        u = 0;\n        while (calcSub[u] > calcSub[u + 1])\n            u++;\n        var maxval = -1, maxpos = -1;\n        for (i = u; i < framesLength; i++) {\n            if (calcSub[i] > maxval) {\n                maxval = calcSub[i];\n                maxpos = i;\n            }\n        }\n        var T0 = maxpos;\n        /* Interpolation is parabolic interpolation. It helps with precision.\n         We suppose that a parabola pass through the three points that comprise the peak.\n         'a' and 'b' are the unknowns from the linear equation system\n         and b/(2a) is the \"error\" in the abscissa.\n         y1,y2,y3 are the ordinates.*/\n        var y1 = calcSub[T0 - 1], y2 = calcSub[T0], y3 = calcSub[T0 + 1];\n        var a = (y1 + y3 - 2 * y2) / 2;\n        var b = (y3 - y1) / 2;\n        if (a)\n            T0 = T0 - b / (2 * a);\n        return sampleRate / T0;\n    };\n}\nexports.ACF2PLUS = ACF2PLUS;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","value","DEFAULT_PARAMS","sampleRate","ACF2PLUS","params","config","ACF2PLUSDetector","float32AudioBuffer","maxShift","rms","tmp","Math","sqrt","aux1","aux2","thres","abs","frames","slice","framesLength","calcSub","Array","fill","j","u","maxpos","maxval","T0","y1","y3","a","y2"]
}
